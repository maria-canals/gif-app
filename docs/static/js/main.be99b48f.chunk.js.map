{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAAAC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfd,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAICI,MAAMF,GAJP,cAIhBG,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAefM,GAfe,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxC,OACC,sBAAKc,UAAU,2CAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,6BAAKA,QCFKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAMzB,ECP2B,SAAAA,GAC3B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAAAC,GACtBC,YAAW,WACVJ,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAER,UAEF,CAACpB,IAEGqB,EDV2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACC,qCACC,6BAAKpB,IAEJoB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEIZiB,EApBM,WAEpB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACC,qCACC,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BACE4C,EAAWpB,KAAI,SAAAqB,GAAG,OAClB,cAAC,EAAD,CAAmB9B,SAAU8B,GAAfA,YCZnBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.be99b48f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type='text' value={inputValue} onChange={handleInputChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async category => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&api_key=GeMNHX2YTLfPa12pIlMl83GvwSiJNgOk&limit=10`;\r\n\tconst response = await fetch(url);\r\n\tconst { data } = await response.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeInUp'>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<h1>{title}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\t// const [images, setImages] = useState([]);\r\n\t// useEffect(() => {\r\n\t// \tgetGifs(category).then(setImages);\r\n\t// }, [category]);\r\n\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\r\n\t\t\t{loading && <h4>Loading...</h4>}\r\n\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{images.map(img => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(imgs => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetstate({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 2000);\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\t// const categories = ['Family Guy', 'Simpsons', 'Futurama'];\r\n\tconst [categories, setCategories] = useState(['Family Guy']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map(cat => (\r\n\t\t\t\t\t<GifGrid key={cat} category={cat} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}